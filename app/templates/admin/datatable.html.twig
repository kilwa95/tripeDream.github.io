<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-bootgrid/1.3.1/jquery.bootgrid.js"></script>
<script>
    $(document).ready(function() {
        //$('.alert-success').delay(2000).hide(0);
        //$('.alert-danger').delay(2000).hide(0);

        var entity =  $('#entity').val();
        var url =  $('#url').val();

        var table = $('#table_data').bootgrid({
            ajax: true,
            rowSelect: true,
            url: url,
            formatters: {
                "infoPrId": function(column, row) {
                    var url = "{{ path('show_info_pr', {'id': 'rowId'}) }}".replace("rowId", row[column.id]);

                    return "<a target='_blank' href='"+ url +"'>"+ row[column.id] +"</a>";
                },
                "userId": function(column, row) {
                    var url = "{{ path('show_user', {'id': 'rowId'}) }}".replace("rowId", row[column.id]);

                    return "<a target='_blank' href='"+ url +"'>"+ row[column.id] +"</a>";
                },
                "voyageId": function(column, row) {
                    var url = "{{ path('show_voyage', {'id': 'rowId'}) }}".replace("rowId", row[column.id]);

                    return "<a target='_blank' href='"+ url +"'>"+ row[column.id] +"</a>";
                },
                "commands": function(column, row) {
                    var urlShowBtn;
                    var urlEditBtn;
                    var urlDelBtn;

                    switch (entity) {
                        case 'user':
                            urlShowBtn = "{{ path('show_user', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('edit_user', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_user', {'id': 'rowId'}) }}";
                            break;
                        case 'info_pr':
                            urlShowBtn = "{{ path('show_info_pr', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('edit_info_pr', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_info_pr', {'id': 'rowId'}) }}";
                            break;
                        case 'voyage':
                            urlShowBtn = "{{ path('show_voyage', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('edit_voyage', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_voyage', {'id': 'rowId'}) }}";
                            break;
                        case 'programme':
                            urlShowBtn = "{{ path('show_programme', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('admin_programme_edit', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_programme', {'id': 'rowId'}) }}";
                            break;
                        case 'tarif':
                            urlShowBtn = "{{ path('show_tarif', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('admin_tarif_edit', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_tarif', {'id': 'rowId'}) }}";
                            break;
                        case 'activite':
                            urlShowBtn = "{{ path('show_activite', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('admin_activite_edit', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_activite', {'id': 'rowId'}) }}";
                            break;
                        case 'saison':
                            urlShowBtn = "{{ path('show_saison', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('admin_saison_edit', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_saison', {'id': 'rowId'}) }}";
                            break;
                        case 'pays':
                            urlShowBtn = "{{ path('show_pays', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('admin_pays_edit', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_pays', {'id': 'rowId'}) }}";
                            break;
                        case 'ville':
                            urlShowBtn = "{{ path('show_ville', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('admin_ville_edit', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_ville', {'id': 'rowId'}) }}";
                            break;
                        case 'adresse':
                            urlShowBtn = "{{ path('show_adresse', {'id': 'rowId'}) }}";
                            urlEditBtn = "{{ path('admin_adresse_edit', {'id': 'rowId'}) }}";
                            urlDelBtn = "{{ path('delete_adresse', {'id': 'rowId'}) }}";
                            break;
                    }

                    urlShowBtn = urlShowBtn.replace("rowId", row.id);
                    urlEditBtn = urlEditBtn.replace("rowId", row.id);
                    urlDelBtn = urlDelBtn.replace("rowId", row.id);

                    return "<div class='text-center'><a href='"+urlShowBtn+"' class='btn btn-info btn-xs update'><i class='bi bi-eye'></i></a>" +
                        "&nbsp; <a href='"+urlEditBtn+"' class='btn btn-warning btn-xs update'><i class='bi bi-pencil-square'></i></a>" +
                        "&nbsp; <a href='"+urlDelBtn+"' class='btn btn-danger btn-xs delete'><i class='bi bi-x-square'></i></a></div>";
                }
            },
            labels: {
                loading: "Chargement",
                noResults: "Aucun résultat trouvé !",
                refresh: "Actualiser",
                search: "Rechercher",
            },
            /**
            * Contains all css classes.
            *
            * @property css
            * @type Object
            * @for defaults
            **/
            css: {
                actions: "actions btn-group", // must be a unique class name or constellation of class names within the header and footer
                center: "text-center",
                columnHeaderAnchor: "column-header-anchor", // must be a unique class name or constellation of class names within the column header cell
                columnHeaderText: "text",
                dropDownItem: "dropdown-item", // must be a unique class name or constellation of class names within the actionDropDown,
                dropDownItemButton: "dropdown-item-button", // must be a unique class name or constellation of class names within the actionDropDown
                dropDownItemCheckbox: "dropdown-item-checkbox", // must be a unique class name or constellation of class names within the actionDropDown
                dropDownMenu: "dropdown btn-group", // must be a unique class name or constellation of class names within the actionDropDown
                dropDownMenuItems: "dropdown-menu pull-right", // must be a unique class name or constellation of class names within the actionDropDown
                dropDownMenuText: "dropdown-text", // must be a unique class name or constellation of class names within the actionDropDown
                footer: "bootgrid-footer container-fluid",
                header: "bootgrid-header container-fluid",
                icon: "icon glyphicon",
                iconColumns: "bi bi-check2-square",
                iconDown: "bi bi-sort-down",
                iconRefresh: "bi bi-arrow-repeat",
                iconUp: "bi bi-sort-up",
                infos: "infos", // must be a unique class name or constellation of class names within the header and footer,
                left: "",
                pagination: "pagination", // must be a unique class name or constellation of class names within the header and footer
                paginationButton: "page-link", // must be a unique class name or constellation of class names within the pagination

                /**
                * CSS class to select the parent div which activates responsive mode.
                *
                * @property responsiveTable
                * @type String
                * @default "table-responsive"
                * @for css
                * @since 1.1.0
                **/
                responsiveTable: "table-responsive",

                right: "text-right",
                search: "search form-group", // must be a unique class name or constellation of class names within the header and footer
                selectBox: "select-box", // must be a unique class name or constellation of class names within the entire table
                selectCell: "select-cell", // must be a unique class name or constellation of class names within the entire table

                /**
                * CSS class to highlight selected rows.
                *
                * @property selected
                * @type String
                * @default "active"
                * @for css
                * @since 1.1.0
                **/
                selected: "active",

                sortable: "sortable",
            },
            /**
            * Contains all templates.
            *
            * @property templates
            * @type Object
            * @for defaults
            **/
            templates: {
                
            }
        });
    });
</script>